<?php

namespace DoctrineORMModule\Proxy\__CG__\Entities\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Section extends \Entities\Entity\Section implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'id', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'path', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'name', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'bucket', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'position', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description1', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description2', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description3', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description4', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'status', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'tags', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'text', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'link', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'slug', 'subsections', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'parent', 'images', 'texts'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'id', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'path', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'name', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'bucket', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'position', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description1', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description2', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description3', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'description4', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'status', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'tags', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'text', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'link', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'slug', 'subsections', '' . "\0" . 'Entities\\Entity\\Section' . "\0" . 'parent', 'images', 'texts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Section $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription1', []);

        return parent::getDescription1();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription2', []);

        return parent::getDescription2();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription3', []);

        return parent::getDescription3();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription4', []);

        return parent::getDescription4();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', []);

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function getLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', []);

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubsections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubsections', []);

        return parent::getSubsections();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription1($description1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription1', [$description1]);

        return parent::setDescription1($description1);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription2($description2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription2', [$description2]);

        return parent::setDescription2($description2);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription3($description3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription3', [$description3]);

        return parent::setDescription3($description3);
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription4($description4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription4', [$description4]);

        return parent::setDescription4($description4);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', [$tags]);

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function setText($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', [$text]);

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function setLink($link)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', [$link]);

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function setSubsections($subsections)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubsections', [$subsections]);

        return parent::setSubsections($subsections);
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function setImages($images)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImages', [$images]);

        return parent::setImages($images);
    }

    /**
     * {@inheritDoc}
     */
    public function getTexts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTexts', []);

        return parent::getTexts();
    }

    /**
     * {@inheritDoc}
     */
    public function setTexts($texts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTexts', [$texts]);

        return parent::setTexts($texts);
    }

    /**
     * {@inheritDoc}
     */
    public function getBucket()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBucket', []);

        return parent::getBucket();
    }

    /**
     * {@inheritDoc}
     */
    public function setBucket($bucket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBucket', [$bucket]);

        return parent::setBucket($bucket);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstText', []);

        return parent::getFirstText();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstImage', []);

        return parent::getFirstImage();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isDisabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDisabled', []);

        return parent::isDisabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubsectionSortedByName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubsectionSortedByName', []);

        return parent::getSubsectionSortedByName();
    }

}
